{
  "openapi": "3.0.0",
  "info": {
    "title": "User Registration API",
    "version": "1.0.0",
    "description": "API for ACL Project"
  },
  "servers": [
    {
      "url": "http://localhost:3030"
    }
  ],
  "paths": {
    "/deleteUserByIdAndType": {
      "delete": {
        "summary": "Delete a user by _id and userType",
        "description": "Deletes a user based on the provided userType and prevents self-deletion.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "userType": {
                    "type": "string"
                  },
                  "selfId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Invalid input or trying to delete oneself"
          },
          "403": {
            "description": "Unauthorized action"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/addGovernorOrAdmin": {
      "post": {
        "summary": "Add a new tourismGovernor or Admin",
        "description": "Adds a new user with role 'tourismGovernor' or 'admin'.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the new user."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new user."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "tourismGovernor"
                    ],
                    "description": "The role of the new user (either 'admin' or 'tourismGovernor')."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while adding the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fetchAllUsersAndTourists/{_id}": {
      "get": {
        "summary": "Fetch all users and tourists",
        "description": "Retrieves all registered users and tourists. Only accessible by admins.",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the admin requesting the information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users and tourists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tourists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing _id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upcomingEvents/{username}": {
      "get": {
        "summary": "Get upcoming events for a tourist",
        "description": "Retrieves a list of upcoming activities, itineraries, and historical places for the specified tourist username.",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "description": "The username of the tourist whose upcoming events are to be retrieved.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of upcoming events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "upcomingActivities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "upcomingItineraries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "upcomingHistoricalPlaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to invalid username",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tourist not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createTourGuide/{_id}": {
      "post": {
        "summary": "Create a new tour guide",
        "description": "Adds a new tour guide to the system.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the tour guide to create.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the tour guide."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the tour guide."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the tour guide."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The mobile number of the tour guide."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tour guide created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tour guide created successfully"
                    },
                    "tourGuide": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing Input"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict due to existing username or email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getTourGuide/{_id}": {
      "get": {
        "summary": "Get tour guide details",
        "description": "Retrieve details of a specific tour guide by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the tour guide to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tour guide details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tourGuide": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tour guide not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tour guide not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateTourGuide/{_id}": {
      "put": {
        "summary": "Update a tour guide",
        "description": "Update the details of a specific tour guide by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the tour guide to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The updated email address of the tour guide."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The updated mobile number of the tour guide."
                  },
                  "otherDetails": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tour guide updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tour guide updated successfully"
                    },
                    "tourGuide": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tour guide not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tour guide not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createAdvertiser/{_id}": {
      "post": {
        "summary": "Create a new advertiser",
        "description": "Adds a new advertiser to the system.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the advertiser to create.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the advertiser."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the advertiser."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the advertiser."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The mobile number of the advertiser."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Advertiser created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Advertiser created successfully"
                    },
                    "advertiser": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing Input"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict due to existing username or email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAdvertiser/{_id}": {
      "get": {
        "summary": "Get advertiser details",
        "description": "Retrieve details of a specific advertiser by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the advertiser to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved advertiser details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "advertiser": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Advertiser not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Advertiser not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateAdvertiser/{_id}": {
      "put": {
        "summary": "Update an advertiser",
        "description": "Update the details of a specific advertiser by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the advertiser to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The updated email address of the advertiser."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The updated mobile number of the advertiser."
                  },
                  "otherDetails": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Advertiser updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Advertiser updated successfully"
                    },
                    "advertiser": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Advertiser not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Advertiser not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createSeller/{_id}": {
      "post": {
        "summary": "Create a new seller",
        "description": "Adds a new seller to the system.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the seller to create.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the seller."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the seller."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the seller."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The mobile number of the seller."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Seller created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Seller created successfully"
                    },
                    "seller": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing Input"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict due to existing username or email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getSeller/{_id}": {
      "get": {
        "summary": "Get seller details",
        "description": "Retrieve details of a specific seller by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the seller to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved seller details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "seller": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Seller not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Seller not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateSeller/{_id}": {
      "put": {
        "summary": "Update a seller",
        "description": "Update the details of a specific seller by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the seller to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The updated email address of the seller."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The updated mobile number of the seller."
                  },
                  "otherDetails": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Seller updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Seller updated successfully"
                    },
                    "seller": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Seller not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Seller not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getTourist/{_id}": {
      "get": {
        "summary": "Get tourist details",
        "description": "Retrieve details of a specific tourist by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the tourist to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tourist details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tourist": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tourist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tourist not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updateTourist/{_id}": {
      "put": {
        "summary": "Update a tourist",
        "description": "Update the details of a specific tourist by ID.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the tourist to update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The updated email address of the tourist."
                  },
                  "mobileNum": {
                    "type": "string",
                    "description": "The updated mobile number of the tourist."
                  },
                  "otherDetails": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tourist updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tourist updated successfully"
                    },
                    "tourist": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tourist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tourist not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register/{type}": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a new user based on the user type (tourist, tourGuide, advertiser, seller).",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "The type of user to register (tourist, tourGuide, advertiser, seller).",
            "schema": {
              "type": "string",
              "enum": [
                "tourist",
                "tourGuide",
                "advertiser",
                "seller"
              ]
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User registration details.",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The user's email address."
                },
                "username": {
                  "type": "string",
                  "description": "The username for the user."
                },
                "password": {
                  "type": "string",
                  "description": "The password for the user."
                },
                "mobileNum": {
                  "type": "string",
                  "description": "The mobile number of the tourist (only for type `tourist`)."
                },
                "nation": {
                  "type": "string",
                  "description": "The nationality of the tourist (only for type `tourist`)."
                },
                "dob": {
                  "type": "string",
                  "format": "date",
                  "description": "The date of birth of the tourist (only for type `tourist`)."
                },
                "profession": {
                  "type": "string",
                  "description": "The profession of the tourist (only for type `tourist`)."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "User": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing Input"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict due to existing username or email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Username already exists"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/GetMyEvents/{_id}/{userType}": {
      "get": {
        "summary": "Get events based on user type",
        "description": "Retrieve events related to a specific user based on their role (tourismGovernor, tourGuide, advertiser).",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            },
            "example": "64a8b0f1234567890abc1234"
          },
          {
            "in": "path",
            "name": "userType",
            "required": true,
            "description": "The type of the user (tourismGovernor, tourGuide, advertiser)",
            "schema": {
              "type": "string",
              "enum": [
                "tourismGovernor",
                "tourGuide",
                "advertiser"
              ]
            },
            "example": "tourGuide"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "description": "List of events related to the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the event"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the event"
                          },
                          "description": {
                            "type": "string",
                            "description": "A brief description of the event"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "description": "The date of the event"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location of the event"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User ID and userType are required."
                    },
                    "error": {
                      "type": "string",
                      "example": "Invalid userId or userType format"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred"
                    },
                    "details": {
                      "type": "string",
                      "example": "Error details message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAllCategories/{userType}": {
      "get": {
        "summary": "Retrieve all categories based on user type",
        "description": "This endpoint retrieves all categories. The userType is validated before fetching the categories. Only valid user types can access this endpoint.",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The type of user making the request (e.g., advertiser, admin, tourGuide, tourist, guest)",
            "example": "advertiser"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the category"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the category"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid userType provided",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while fetching categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching categories"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/updatePreferenceTagById/{_id}": {
      "put": {
        "summary": "Update a preference tag by ID",
        "description": "This endpoint allows updating a specific preference tag using its ID. The request is only allowed if the user is an admin.",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the preference tag to be updated",
            "example": "607d1e3eab1e3f001fddf72a"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "tags": [
                    "cultural",
                    "historical"
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the preference tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag updated successfully"
                    },
                    "updatedTag": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while updating the tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating tag"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/deletePreferenceTagById/{_id}": {
      "delete": {
        "summary": "Delete a preference tag by ID",
        "description": "This endpoint allows deleting a specific preference tag using its ID. The request is only allowed if the user is an admin.",
        "tags": [
          "Tags"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the preference tag to be deleted",
            "example": "607d1e3eab1e3f001fddf72a"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the preference tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tag not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error while deleting the tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting tag"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upcomingEvents": {
      "get": {
        "summary": "Retrieve upcoming events",
        "description": "This endpoint returns a list of upcoming events, including activities, itineraries, and historical places.",
        "tags": [
          "Events"
        ],
        "responses": {
          "200": {
            "description": "A list of upcoming events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "activities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "607d1e3eab1e3f001fddf72a"
                          },
                          "name": {
                            "type": "string",
                            "example": "City Tour"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-10-15"
                          },
                          "time": {
                            "type": "string",
                            "example": "10:00 AM"
                          },
                          "location": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "example": 37.7749
                              },
                              "longitude": {
                                "type": "number",
                                "example": -122.4194
                              }
                            }
                          },
                          "budget": {
                            "type": "number",
                            "example": 50
                          },
                          "category": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Cultural"
                              }
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "sightseeing"
                            }
                          },
                          "specialDiscounts": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "created_by": {
                            "type": "string",
                            "example": "admin"
                          },
                          "flag": {
                            "type": "boolean",
                            "example": true
                          },
                          "isOpen": {
                            "type": "boolean",
                            "example": true
                          },
                          "rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4.5
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-10T12:00:00Z"
                          },
                          "description": {
                            "type": "string",
                            "example": "Explore the city's history and culture."
                          }
                        }
                      }
                    },
                    "itineraries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "607d1e3eab1e3f001fddf72b"
                          },
                          "activities": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "timeline": {
                            "type": "string",
                            "example": "09:00 AM - 05:00 PM"
                          },
                          "directions": {
                            "type": "string",
                            "example": "Start at the main square."
                          },
                          "language": {
                            "type": "string",
                            "example": "English"
                          },
                          "price": {
                            "type": "number",
                            "example": 150
                          },
                          "dateAvailable": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-10-15"
                          },
                          "accessibility": {
                            "type": "string",
                            "example": "Wheelchair accessible"
                          },
                          "pickupLocation": {
                            "type": "string",
                            "example": "Hotel Lobby"
                          },
                          "dropoffLocation": {
                            "type": "string",
                            "example": "Main Square"
                          },
                          "isActivated": {
                            "type": "boolean",
                            "example": true
                          },
                          "created_by": {
                            "type": "string",
                            "example": "admin"
                          },
                          "flag": {
                            "type": "boolean",
                            "example": false
                          },
                          "rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "historicalPlaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "607d1e3eab1e3f001fddf72c"
                          },
                          "description": {
                            "type": "string",
                            "example": "A beautiful historical site."
                          },
                          "pictures": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "http://example.com/image.jpg"
                            }
                          },
                          "location": {
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "example": 37.7749
                              },
                              "longitude": {
                                "type": "number",
                                "example": -122.4194
                              }
                            }
                          },
                          "openingHours": {
                            "type": "string",
                            "example": "9 AM - 6 PM"
                          },
                          "ticketPrice": {
                            "type": "object",
                            "properties": {
                              "student": {
                                "type": "number",
                                "example": 10
                              },
                              "native": {
                                "type": "number",
                                "example": 20
                              },
                              "foreign": {
                                "type": "number",
                                "example": 30
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-08-10T12:00:00Z"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "history"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred"
                    },
                    "details": {
                      "type": "string",
                      "example": "Error message details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filterUpcommingActivites": {
      "get": {
        "summary": "Filter upcoming activities",
        "description": "Retrieve a filtered list of upcoming activities based on budget, date, categoryId, and rating.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "budget",
            "schema": {
              "type": "number"
            },
            "description": "The maximum budget for the activities",
            "example": 100.5
          },
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "The date of the activity (filter)",
            "example": "2024-10-10T00:00:00Z"
          },
          {
            "in": "query",
            "name": "categoryId",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the category to filter activities by",
            "example": "categoryId123"
          },
          {
            "in": "query",
            "name": "rating",
            "schema": {
              "type": "integer"
            },
            "description": "Minimum rating of the activities (1-5)",
            "example": 4
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the filtered list of activities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the activity"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the activity"
                      },
                      "budget": {
                        "type": "number",
                        "description": "The budget for the activity"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date of the activity"
                      },
                      "categoryId": {
                        "type": "string",
                        "description": "The category ID of the activity"
                      },
                      "rating": {
                        "type": "integer",
                        "description": "The rating of the activity (1-5)"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "An error occurred"
                    },
                    "details": {
                      "type": "string",
                      "example": "Error details message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filteritineraries": {
      "get": {
        "summary": "Get filtered itineraries",
        "description": "Fetch itineraries based on budget, date, preferences, and language.",
        "parameters": [
          {
            "in": "query",
            "name": "budget",
            "required": false,
            "description": "Budget filter for itineraries",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "description": "Date filter for itineraries in YYYY-MM-DD format",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preferences",
            "required": false,
            "description": "User preferences for filtering itineraries",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "language",
            "required": false,
            "description": "Preferred language for itineraries",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved filtered itineraries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "total": {
                      "type": "integer",
                      "example": 2
                    },
                    "itineraries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "activities": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "locations": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "price": {
                            "type": "number"
                          },
                          "dateTimeAvailable": {
                            "type": "string"
                          },
                          "language": {
                            "type": "string"
                          },
                          "accessibility": {
                            "type": "string"
                          },
                          "pickupLocation": {
                            "type": "string"
                          },
                          "dropoffLocation": {
                            "type": "string"
                          },
                          "rating": {
                            "type": "number"
                          },
                          "comments": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching itineraries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "An error occurred while fetching itineraries"
                    },
                    "details": {
                      "type": "string",
                      "example": "Error details message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historicalPlacesByTags/{_id}": {
      "get": {
        "summary": "Filter historical places by tags",
        "description": "Fetch historical places based on specified tags for a given user ID.",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "User ID to filter the historical places",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags",
            "required": true,
            "description": "Array of tags to filter historical places",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved filtered historical places",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "pictures": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "type": "string"
                      },
                      "openingHours": {
                        "type": "string"
                      },
                      "ticketPrice": {
                        "type": "number"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "createdBy": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while fetching historical places",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createHistoricalTag/{_id}": {
      "post": {
        "summary": "Create a historical tag",
        "description": "Creates a new historical tag if the user is authorized (tourismGovernor).",
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "User ID for authorization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the historical tag"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the historical tag"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a historical tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while creating the tag",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity/{_id}/{userId}": {
      "get": {
        "summary": "Retrieve activity by ID",
        "description": "Get activity details based on the provided activity ID and user ID. Only 'advertiser' type users can access this endpoint.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the activity to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user requesting the activity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activity details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the activity."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the activity."
                    },
                    "description": {
                      "type": "string",
                      "description": "A description of the activity."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Activity not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error message here"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing activity",
        "description": "Updates the details of an existing activity.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the activity to update.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the update.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The updated date of the activity."
                  },
                  "time": {
                    "type": "string",
                    "description": "The updated time of the activity."
                  },
                  "location": {
                    "type": "string",
                    "description": "The updated location of the activity."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The updated price of the activity."
                  },
                  "category": {
                    "type": "string",
                    "description": "The updated ID of the category for the activity."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Updated tags associated with the activity."
                  },
                  "specialDiscounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Updated special discounts for the activity."
                  },
                  "isOpen": {
                    "type": "boolean",
                    "description": "Indicates if the activity is open."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity updated successfully"
                    },
                    "activity": {
                      "type": "object",
                      "description": "The updated activity object.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the updated activity."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "The updated date of the activity."
                        },
                        "time": {
                          "type": "string",
                          "description": "The updated time of the activity."
                        },
                        "location": {
                          "type": "string",
                          "description": "The updated location of the activity."
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The updated price of the activity."
                        },
                        "category": {
                          "type": "string",
                          "description": "The updated ID of the category for the activity."
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Updated tags associated with the activity."
                        },
                        "specialDiscounts": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Updated special discounts for the activity."
                        },
                        "isOpen": {
                          "type": "boolean",
                          "description": "Indicates if the activity is open."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing inputs, invalid type, or invalid fields in the update request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Activity not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating activity"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an existing activity",
        "description": "Deletes an activity by its ID.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the activity to delete.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the delete request.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing inputs or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Activity not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting activity"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity/user/{userId}/allActivities": {
      "get": {
        "summary": "Retrieve all activities for an advertiser",
        "description": "Get all activities created by a specific user, where the user is of type 'advertiser'.",
        "tags": [
          "Activities"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user requesting the activities.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activities.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the activity."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the activity."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the activity."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date when the activity was created."
                      },
                      "created_by": {
                        "type": "string",
                        "description": "The ID of the user who created the activity."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user type or missing userId.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid user type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching activities"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/activity": {
      "post": {
        "summary": "Create a new activity",
        "description": "Adds a new activity created by an advertiser.",
        "tags": [
          "Activities"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the activity."
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "The date of the activity."
                  },
                  "time": {
                    "type": "string",
                    "description": "The time of the activity."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location of the activity."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The price of the activity."
                  },
                  "category": {
                    "type": "string",
                    "description": "The ID of the category for the activity."
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags associated with the activity."
                  },
                  "specialDiscounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Special discounts for the activity."
                  },
                  "isOpen": {
                    "type": "boolean",
                    "description": "Indicates if the activity is open."
                  },
                  "created_by": {
                    "type": "string",
                    "description": "The ID of the user who created the activity."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Activity created successfully"
                    },
                    "activity": {
                      "type": "object",
                      "description": "The created activity object.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the created activity."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the activity."
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "description": "The date of the activity."
                        },
                        "time": {
                          "type": "string",
                          "description": "The time of the activity."
                        },
                        "location": {
                          "type": "string",
                          "description": "The location of the activity."
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The price of the activity."
                        },
                        "category": {
                          "type": "string",
                          "description": "The ID of the category for the activity."
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Tags associated with the activity."
                        },
                        "specialDiscounts": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Special discounts for the activity."
                        },
                        "isOpen": {
                          "type": "boolean",
                          "description": "Indicates if the activity is open."
                        },
                        "created_by": {
                          "type": "string",
                          "description": "The ID of the user who created the activity."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating activity"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itinerary/{_id}/{userId}": {
      "get": {
        "summary": "Retrieve an itinerary by ID",
        "description": "Fetches an itinerary based on its ID and the user type.",
        "tags": [
          "Itineraries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the itinerary to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved itinerary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60c72b2f5f1b2c001f7e8e6f"
                    },
                    "name": {
                      "type": "string",
                      "example": "Summer Vacation"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "activityId": {
                            "type": "string",
                            "example": "60c72b2f5f1b2c001f7e8e6g"
                          },
                          "description": {
                            "type": "string",
                            "example": "Beach day with friends"
                          }
                        }
                      }
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "John Doe"
                              }
                            }
                          },
                          "content": {
                            "type": "string",
                            "example": "Had a great time!"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing ID or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing id"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Itinerary not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing itinerary",
        "description": "Updates the specified itinerary with new data. Only tour guides can update itineraries.",
        "tags": [
          "Itineraries"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the itinerary to update.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6f"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "60c72b2f5f1b2c001f7e8e6f",
                        "60c72b2f5f1b2c001f7e8e70"
                      ]
                    }
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "Location A",
                        "Location B"
                      ]
                    }
                  },
                  "timeline": {
                    "type": "string",
                    "example": "Day 1: Arrival; Day 2: Sightseeing"
                  },
                  "directions": {
                    "type": "string",
                    "example": "Take bus number 5 to reach the destination."
                  },
                  "language": {
                    "type": "string",
                    "example": "English"
                  },
                  "price": {
                    "type": "number",
                    "example": 100
                  },
                  "dateTimeAvailable": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-10-01T10:00:00Z"
                  },
                  "accessibility": {
                    "type": "string",
                    "example": "Wheelchair accessible"
                  },
                  "pickupLocation": {
                    "type": "string",
                    "example": "Hotel Lobby"
                  },
                  "dropoffLocation": {
                    "type": "string",
                    "example": "Airport"
                  },
                  "isActivated": {
                    "type": "boolean",
                    "example": true
                  },
                  "flag": {
                    "type": "string",
                    "example": "normal"
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated itinerary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary updated successfully."
                    },
                    "itinerary": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e6f"
                        },
                        "activities": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": [
                              "60c72b2f5f1b2c001f7e8e6f",
                              "60c72b2f5f1b2c001f7e8e70"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request due to missing id or user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type or missing id."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Itinerary not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating itinerary."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an existing itinerary",
        "description": "Deletes the specified itinerary. Only tour guides can delete itineraries.",
        "tags": [
          "Itineraries"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "description": "The ID of the itinerary to delete.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6f"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted itinerary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary deleted successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request due to missing id or user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type or missing id."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Itinerary not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting itinerary."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itinerary/user/{userId}/allItineraries": {
      "get": {
        "summary": "Retrieve all itineraries for a user",
        "description": "Fetches all itineraries created by a specific user based on their user ID.",
        "tags": [
          "Itineraries"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user whose itineraries are being requested.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved itineraries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "60c72b2f5f1b2c001f7e8e6f"
                      },
                      "name": {
                        "type": "string",
                        "example": "Weekend Getaway"
                      },
                      "activities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "activityId": {
                              "type": "string",
                              "example": "60c72b2f5f1b2c001f7e8e6g"
                            },
                            "description": {
                              "type": "string",
                              "example": "Visit the local museum"
                            }
                          }
                        }
                      },
                      "created_by": {
                        "type": "string",
                        "example": "60c72b2f5f1b2c001f7e8e6h"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID or user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing userId"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/itinerary": {
      "post": {
        "summary": "Create a new itinerary",
        "description": "Creates a new itinerary with the specified details.",
        "tags": [
          "Itineraries"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activities": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "60c72b2f5f1b2c001f7e8e6f",
                        "60c72b2f5f1b2c001f7e8e70"
                      ]
                    }
                  },
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "Location A",
                        "Location B"
                      ]
                    }
                  },
                  "timeline": {
                    "type": "string",
                    "example": "Day 1: Arrival; Day 2: Sightseeing"
                  },
                  "directions": {
                    "type": "string",
                    "example": "Take bus number 5 to reach the destination."
                  },
                  "language": {
                    "type": "string",
                    "example": "English"
                  },
                  "price": {
                    "type": "number",
                    "example": 100
                  },
                  "dateTimeAvailable": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-10-01T10:00:00Z"
                  },
                  "accessibility": {
                    "type": "string",
                    "example": "Wheelchair accessible"
                  },
                  "pickupLocation": {
                    "type": "string",
                    "example": "Hotel Lobby"
                  },
                  "dropoffLocation": {
                    "type": "string",
                    "example": "Airport"
                  },
                  "isActivated": {
                    "type": "boolean",
                    "example": true
                  },
                  "created_by": {
                    "type": "string",
                    "example": "60c72b2f5f1b2c001f7e8e6h"
                  },
                  "flag": {
                    "type": "string",
                    "example": "normal"
                  },
                  "isSpecial": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created itinerary.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Itinerary created successfully"
                    },
                    "Itinerary": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e6f"
                        },
                        "activities": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": [
                              "60c72b2f5f1b2c001f7e8e6f",
                              "60c72b2f5f1b2c001f7e8e70"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historical-places": {
      "post": {
        "summary": "Create a new historical place",
        "description": "Creates a new historical place with the specified details. Only tourism governors are authorized to create historical places.",
        "tags": [
          "Historical Places"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "A beautiful historical site with rich cultural heritage."
                  },
                  "pictures": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": [
                        "https://example.com/image1.jpg",
                        "https://example.com/image2.jpg"
                      ]
                    }
                  },
                  "location": {
                    "type": "string",
                    "example": "123 Historical Ave, History Town"
                  },
                  "openingHours": {
                    "type": "string",
                    "example": "09:00 AM - 05:00 PM"
                  },
                  "ticketPrice": {
                    "type": "number",
                    "example": 15
                  },
                  "type": {
                    "type": "string",
                    "example": "cultural"
                  },
                  "period": {
                    "type": "string",
                    "example": "Medieval"
                  },
                  "created_by": {
                    "type": "string",
                    "example": "60c72b2f5f1b2c001f7e8e6h"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created historical place.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place created successfully."
                    },
                    "savedPlace": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e70"
                        },
                        "description": {
                          "type": "string",
                          "example": "A beautiful historical site with rich cultural heritage."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing required fields."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "You are not authorized to create a Historical Place."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error creating historical place."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historical-places/{userId}/allHistoricalPlaces": {
      "get": {
        "summary": "Retrieve all historical places",
        "description": "Retrieves a list of all historical places. Only tourism governors are authorized to access this endpoint.",
        "tags": [
          "Historical Places"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of historical places.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "60c72b2f5f1b2c001f7e8e70"
                      },
                      "description": {
                        "type": "string",
                        "example": "A beautiful historical site with rich cultural heritage."
                      },
                      "pictures": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "https://example.com/image1.jpg"
                        }
                      },
                      "location": {
                        "type": "string",
                        "example": "123 Historical Ave, History Town"
                      },
                      "openingHours": {
                        "type": "string",
                        "example": "09:00 AM - 05:00 PM"
                      },
                      "ticketPrice": {
                        "type": "number",
                        "example": 15
                      },
                      "created_by": {
                        "type": "string",
                        "example": "60c72b2f5f1b2c001f7e8e6h"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing userId or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing userId"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching historical places."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/historical-places/{_id}/{userId}": {
      "get": {
        "summary": "Retrieve a historical place by ID",
        "description": "Fetch a specific historical place using its ID. Only tourism governors are authorized to access this endpoint.",
        "tags": [
          "Historical Places"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the historical place to retrieve.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e70"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical place found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place found"
                    },
                    "historicalPlace": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e70"
                        },
                        "description": {
                          "type": "string",
                          "example": "A beautiful historical site with rich cultural heritage."
                        },
                        "pictures": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "https://example.com/image1.jpg"
                          }
                        },
                        "location": {
                          "type": "string",
                          "example": "123 Historical Ave, History Town"
                        },
                        "openingHours": {
                          "type": "string",
                          "example": "09:00 AM - 05:00 PM"
                        },
                        "ticketPrice": {
                          "type": "number",
                          "example": 15
                        },
                        "created_by": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e6h"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing inputs or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Historical place not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error fetching historical place."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a historical place by ID",
        "description": "Update an existing historical place using its ID. Only tourism governors are authorized to make updates.",
        "tags": [
          "Historical Places"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the historical place to update.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e70"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updateValues": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "An updated description for the historical site."
                      },
                      "pictures": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "https://example.com/image2.jpg"
                        }
                      },
                      "location": {
                        "type": "string",
                        "example": "456 Updated Historical Ave, History Town"
                      },
                      "openingHours": {
                        "type": "string",
                        "example": "10:00 AM - 06:00 PM"
                      },
                      "ticketPrice": {
                        "type": "number",
                        "example": 20
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Historical place updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place updated"
                    },
                    "updatedHistoricalPlace": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e70"
                        },
                        "description": {
                          "type": "string",
                          "example": "An updated description for the historical site."
                        },
                        "pictures": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "https://example.com/image2.jpg"
                          }
                        },
                        "location": {
                          "type": "string",
                          "example": "456 Updated Historical Ave, History Town"
                        },
                        "openingHours": {
                          "type": "string",
                          "example": "10:00 AM - 06:00 PM"
                        },
                        "ticketPrice": {
                          "type": "number",
                          "example": 20
                        },
                        "created_by": {
                          "type": "string",
                          "example": "60c72b2f5f1b2c001f7e8e6h"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing inputs or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Historical place not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating historical place."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a historical place by ID",
        "description": "Deletes an existing historical place using its ID. Only tourism governors are authorized to perform this action.",
        "tags": [
          "Historical Places"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "description": "The ID of the historical place to delete.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e70"
            }
          },
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user making the request.",
            "schema": {
              "type": "string",
              "example": "60c72b2f5f1b2c001f7e8e6h"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Historical place deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing inputs or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Missing inputs"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Historical place not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Historical Place not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting historical place."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addProduct/{userId}": {
      "post": {
        "summary": "Add a new product",
        "description": "Adds a new product by a user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user adding the product.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "picture": {
                    "type": "string",
                    "description": "The URL of the product picture."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The price of the product."
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the product."
                  },
                  "sellerType": {
                    "type": "string",
                    "description": "The type of the seller."
                  },
                  "originalQuantity": {
                    "type": "integer",
                    "description": "The original quantity of the product available."
                  },
                  "ratings": {
                    "type": "number",
                    "description": "The initial ratings of the product."
                  },
                  "reviews": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of reviews for the product."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product added successfully"
                    },
                    "product": {
                      "type": "object",
                      "description": "The created product object.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the product"
                        },
                        "picture": {
                          "type": "string",
                          "description": "The URL of the product picture."
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The price of the product."
                        },
                        "description": {
                          "type": "string",
                          "description": "A description of the product."
                        },
                        "sellerType": {
                          "type": "string",
                          "description": "The type of the seller."
                        },
                        "originalQuantity": {
                          "type": "integer",
                          "description": "The original quantity of the product available."
                        },
                        "ratings": {
                          "type": "number",
                          "description": "The initial ratings of the product."
                        },
                        "reviews": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of reviews for the product."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Price, picture, original quantity, description, sellerType, name, ratings and reviews are required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error adding product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/getAvailableProducts/{userId}": {
      "get": {
        "summary": "Get available products",
        "description": "Retrieves all available products for a user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user retrieving available products.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of available products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "picture": {
                        "type": "string",
                        "description": "The URL of the product picture."
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "description": "The price of the product."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the product."
                      },
                      "sellerType": {
                        "type": "string",
                        "description": "The type of the seller."
                      },
                      "ratings": {
                        "type": "number",
                        "description": "The product's ratings."
                      },
                      "reviews": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of reviews for the product."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error retrieving available products"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filterProducts/{userId}": {
      "get": {
        "summary": "Filter products by price range",
        "description": "Retrieves products within a specified price range for a user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user filtering products.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "minPrice",
            "required": false,
            "description": "The minimum price of products to retrieve.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "in": "query",
            "name": "maxPrice",
            "required": false,
            "description": "The maximum price of products to retrieve.",
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products filtered by price range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "picture": {
                        "type": "string",
                        "description": "The URL of the product picture."
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "description": "The price of the product."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the product."
                      },
                      "sellerType": {
                        "type": "string",
                        "description": "The type of the seller."
                      },
                      "ratings": {
                        "type": "number",
                        "description": "The product's ratings."
                      },
                      "reviews": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of reviews for the product."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error querying products by price range"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/editProducts/{userId}/{productId}": {
      "put": {
        "summary": "Update a product",
        "description": "Updates an existing product for the user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user updating the product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "required": true,
            "description": "The ID of the product to be updated.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the product"
                  },
                  "picture": {
                    "type": "string",
                    "description": "The URL of the product picture."
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "description": "The updated price of the product."
                  },
                  "description": {
                    "type": "string",
                    "description": "The updated description of the product."
                  },
                  "originalQuantity": {
                    "type": "integer",
                    "description": "The updated original quantity of the product."
                  },
                  "ratings": {
                    "type": "number",
                    "description": "The updated ratings of the product."
                  },
                  "reviews": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The updated list of reviews for the product."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Product updated successfully"
                    },
                    "product": {
                      "type": "object",
                      "description": "The updated product object.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the product"
                        },
                        "picture": {
                          "type": "string",
                          "description": "The URL of the product picture."
                        },
                        "price": {
                          "type": "number",
                          "format": "float",
                          "description": "The price of the product."
                        },
                        "description": {
                          "type": "string",
                          "description": "A description of the product."
                        },
                        "originalQuantity": {
                          "type": "integer",
                          "description": "The original quantity of the product available."
                        },
                        "ratings": {
                          "type": "number",
                          "description": "The updated ratings of the product."
                        },
                        "reviews": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Updated list of reviews for the product."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required fields or invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Price, picture, original quantity, description, name, ratings and reviews are required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sortProducts/{userId}": {
      "get": {
        "summary": "Sort products by price or rating",
        "description": "Retrieves products sorted by price or rating for a user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user sorting products.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "required": false,
            "description": "The criterion to sort by (price or rating).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products sorted by the specified criterion.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "picture": {
                        "type": "string",
                        "description": "The URL of the product picture."
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "description": "The price of the product."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the product."
                      },
                      "sellerType": {
                        "type": "string",
                        "description": "The type of the seller."
                      },
                      "ratings": {
                        "type": "number",
                        "description": "The product's ratings."
                      },
                      "reviews": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of reviews for the product."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error sorting products"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchProductByName/{userId}": {
      "get": {
        "summary": "Search products by name",
        "description": "Retrieves products by name for a user with the specified userId.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user searching for products.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": true,
            "description": "The name of the product to search for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products matching the search criteria.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the product"
                      },
                      "picture": {
                        "type": "string",
                        "description": "The URL of the product picture."
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "description": "The price of the product."
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the product."
                      },
                      "sellerType": {
                        "type": "string",
                        "description": "The type of the seller."
                      },
                      "ratings": {
                        "type": "number",
                        "description": "The product's ratings."
                      },
                      "reviews": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of reviews for the product."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid type"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error searching products"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}